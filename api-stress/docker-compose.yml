version: '3.5'
services:
  api1: # API - Instância 01
    container_name: api01
    image: api-stress
    build:
      dockerfile: api-stress/Dockerfile
    hostname: api1
    ports:
      - "80"
    depends_on:
      - db
    environment:
      - ConnectionStrings__Database=Host=db;Port=5432;Database=api;Username=root;Password=postgrespw
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'
  
  api2: # API - Instância 02
    container_name: api02
    image: api-stress
    build:
      dockerfile: api-stress/Dockerfile
    hostname: api2
    ports:
      - "80"
    depends_on:
      - db
    environment:
      - ConnectionStrings__Database=Host=db;Port=5432;Database=api;Username=root;Password=postgrespw
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'


  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  db: # Banco de dados
   image: postgres
   environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: postgrespw
      POSTGRES_DB: api
   deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '1.5GB'